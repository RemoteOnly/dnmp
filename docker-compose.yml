version: "3"
services:
  nginx:
    image: nginx:alpine
    container_name: docker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../new_code/:/var/www/html/:rw
      - ./conf/conf.d:/etc/nginx/conf.d/:ro
      - ./conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./log/:/var/log/:rw
    links:
      - php72:link-php
    environment:
      - TZ=Asia/Shanghai
    networks:
      docker_net:
        ipv4_address: ${NGINX_IP}

  php72:
    build: ./php/php72/
    container_name: docker-php
    expose:
      - "9000"
    volumes:
      - ../new_code/:/var/www/html/:rw
      - ./conf/php.ini:/usr/local/etc/php/php.ini:ro
      - ./conf/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf:rw
      - ./log/:/var/log/:rw
    links:
      - mysql:link-mysql
      - redis:link-redis
      - mongo:link-mongo
    networks:
      docker_net:
        ipv4_address: ${PHP72_IP}      

  mysql:
    image: mysql:5.7
    container_name: docker-mysql
    ports:
      - "3306:3306"
    volumes:
      - ./conf/my.cnf:/etc/mysql/my.cnf:ro
      - ./mysql/:/var/lib/mysql/:rw
      - ./log/:/var/log/:rw
    environment:
      MYSQL_ROOT_PASSWORD: "root"
    networks:
      docker_net:
        ipv4_address: ${MYSQL_IP}

  redis:
    image: redis:4.0
    container_name: docker-redis
    ports:
      - "6379:6379"
    networks:
      docker_net:
        ipv4_address: ${REDIS_IP}

  mongo:
    image: mongo
    container_name: docker-mongo
    ports:
      - "27017:27017"
    volumes:
      - ./conf/mongod.conf:/etc/mongod.conf.orig:ro
      - ./mongodb/:/var/lib/mongodb/:rw
      - ./log/:/var/log/:rw
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      docker_net:
        ipv4_address: ${MONGO_IP}

networks:
  docker_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${DOCKER_SUBNET}"
